name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for git plugins

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material
          pip install mkdocs-git-revision-date-localized-plugin
          pip install mkdocs-git-committers-plugin-2
          pip install mkdocs-minify-plugin
          pip install pymdown-extensions
          pip install pillow cairosvg
          # Install the package itself for API docs
          pip install -e .

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build documentation
        run: |
          mkdocs build --clean --strict
          # Add .nojekyll file to disable Jekyll processing
          touch site/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: site

  # Deploy job - only runs on main branch
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages  
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Build check for PRs
  build-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material
          pip install mkdocs-git-revision-date-localized-plugin
          pip install mkdocs-git-committers-plugin-2
          pip install mkdocs-minify-plugin
          pip install pymdown-extensions
          pip install pillow cairosvg
          pip install -e .

      - name: Build documentation (PR check)
        run: |
          echo "üìö Building documentation for PR validation..."
          mkdocs build --clean --strict
          echo "‚úÖ Documentation build successful!"
          
          # List generated files
          echo "üìÅ Generated documentation structure:"
          find site -type f -name "*.html" | head -20 