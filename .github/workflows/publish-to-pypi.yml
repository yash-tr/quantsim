name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
  contents: read

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    environment: pypi  # This should match the environment name in PyPI trusted publisher config
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper versioning
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    
    - name: Verify package version matches release tag
      if: github.event_name == 'release'
      run: |
        PACKAGE_VERSION=$(python -c "import quantsim; print(quantsim.__version__)")
        RELEASE_TAG=${GITHUB_REF#refs/tags/}
        echo "Package version: $PACKAGE_VERSION"
        echo "Release tag: $RELEASE_TAG"
        
        # Remove 'v' prefix if present in tag
        CLEAN_TAG=${RELEASE_TAG#v}
        
        if [ "$PACKAGE_VERSION" != "$CLEAN_TAG" ]; then
          echo "❌ Version mismatch: Package version ($PACKAGE_VERSION) != Release tag ($CLEAN_TAG)"
          echo "Please update the version in quantsim/__init__.py and pyproject.toml"
          exit 1
        fi
        echo "SUCCESS: Version check passed"
    
    - name: Build package
      run: |
        echo "Building package..."
        python -m build
        echo "Build complete!"
        
        # List built files
        echo "Built files:"
        ls -la dist/
    
    - name: Verify package contents
      run: |
        echo "Verifying package contents..."
        python -m twine check dist/*
        echo "SUCCESS: Package verification passed!"
    
    - name: Test package installation
      run: |
        echo "Testing package installation..."
        pip install dist/*.whl
        python -c "import quantsim; print(f'SUCCESS: Successfully imported quantsim v{quantsim.__version__}')"
        
        # Test CLI is available
        quantsim --help > /dev/null && echo "SUCCESS: CLI command is available" || echo "WARNING: CLI command not found"
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true
    
    - name: Create GitHub Release Summary
      if: github.event_name == 'release'
      run: |
        echo "## PyPI Publication Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Package:** quantsim" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** $(python -c 'import quantsim; print(quantsim.__version__)')" >> $GITHUB_STEP_SUMMARY
        echo "**Release:** ${GITHUB_REF#refs/tags/}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Installation" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "pip install quantsim" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Links" >> $GITHUB_STEP_SUMMARY
        echo "- [PyPI Package](https://pypi.org/project/quantsim/)" >> $GITHUB_STEP_SUMMARY
        echo "- [Documentation](https://quantsim.readthedocs.io/)" >> $GITHUB_STEP_SUMMARY
        echo "- [GitHub Repository](https://github.com/yash-tr/quantsim)" >> $GITHUB_STEP_SUMMARY 